

@function compontent-color($themeMap, $name, $type: null) {
    @if ($type) {
        $type-color: map-get($themeMap, $type);
        @return map-get($type-color, $name);
    }

    @return map-get($themeMap, $name);
} 


@for $themeId from 1 through length($bea-colors) {
    $theme-map: map-get($bea-colors, theme-#{$themeId});

    .app-root {
        .bea-pb-theme-#{$themeId} {

            $text-color: compontent-color($theme-map, text);

            &.background {
                background: linear-gradient(to top right, 
                compontent-color($theme-map, dark, background) 0%,
                compontent-color($theme-map, light, background) 100%) !important;
            }

            &.pure-scroll-background {
                div.scroll-content {
                    background-color: compontent-color($theme-map, content-background);
                }
            }

            ion-tabs {
                .tabbar {
                    .tab-button {
                        color: compontent-color($theme-map, base, tab) !important;
        
                        &[aria-selected=true] {
                            color: $text-color !important;
                            border-image: linear-gradient(90deg, compontent-color($theme-map, base, tab), compontent-color($theme-map, light, tab), compontent-color($theme-map, base, tab));
                        }
                    }
                }
            }
            
            div[listContent] {
                background: compontent-color($theme-map, content-background);
            }

            pb-list-item {
                ion-item.itemList, ion-item.nav-record {
                    background-color: compontent-color($theme-map, list-item-background);
                }
            }

            pb-expand-item.item-wrapper {
                .info-item {
                    background-color: compontent-color($theme-map, list-item-background);
                }

                .detail-list ion-item {
                    background-color: compontent-color($theme-map, list-item-background);
                }
            }

            div[view-detail] {
                button {
                    background-color: compontent-color($theme-map, button) !important;
                    color: $text-color !important;
                }
            }

            //div[button-row] {
                button[outline] {
                    color: $text-color !important;
                    border-color: $text-color !important;
                
                    &.selected {
                        background: compontent-color($theme-map, button);
                        border-color: compontent-color($theme-map, button) !important;
                    }
                }
            //}

            //page-portfolio-overview
            .button-container > div {
                background-color: compontent-color($theme-map, list-item-background);
            }

            page-asset-history, page-holding-list {
                ion-content {
                    div.scroll-content {
                        background-color: compontent-color($theme-map, content-background);
                    }
                }
            }

            page-holding-list {
                ion-list:not([pb-list]) {
                    background-color: compontent-color($theme-map, list-item-background);
                }
            }

            click-popup {
                button {
                    background-color: compontent-color($theme-map, click-popup-button) !important;
                    color: $text-color;
                }
            }

        }
    }
}
